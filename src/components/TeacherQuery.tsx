
import { useState } from 'react';
import { Send, FileText, Download, Loader2 } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { useToast } from '@/hooks/use-toast';

interface TeacherQueryProps {
  onStoryGenerated: (story: string, query: string) => void;
}

const TeacherQuery = ({ onStoryGenerated }: TeacherQueryProps) => {
  const [query, setQuery] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const { toast } = useToast();

  const handleGenerateStory = async () => {
    if (!query.trim()) {
      toast({
        title: "рдХреГрдкрдпрд╛ рдкреНрд░рд╢реНрди рджрд░реНрдЬ рдХрд░реЗрдВ",
        description: "рдХрд╣рд╛рдиреА рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдХреЛрдИ рд╡рд┐рд╖рдп рд▓рд┐рдЦреЗрдВ",
        variant: "destructive",
      });
      return;
    }

    setIsGenerating(true);
    
    // Simulate story generation (you can replace this with actual AI API call)
    setTimeout(() => {
      const sampleStory = `рдПрдХ рдмрд╛рд░ рдХреА рдмрд╛рдд рд╣реИ, ${query.replace(/generate a story on|рдХрд╣рд╛рдиреА рдмрдирд╛рдУ|story|рдХрд╣рд╛рдиреА/gi, '').trim() || 'рдПрдХ рдЕрджреНрднреБрдд рд╡рд┐рд╖рдп'} рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдПрдХ рд░реЛрдЪрдХ рдХрд╣рд╛рдиреА...

рдпрд╣ рдХрд╣рд╛рдиреА рд╣рдореЗрдВ рд╕рд┐рдЦрд╛рддреА рд╣реИ рдХрд┐ рдЬреАрд╡рди рдореЗрдВ рдзреИрд░реНрдп рдФрд░ рдореЗрд╣рдирдд рд╕реЗ рд╣рд░ рдореБрд╢реНрдХрд┐рд▓ рдХреЛ рдкрд╛рд░ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИред рдмрдЪреНрдЪреЛрдВ рдХреЛ рд╣рдореЗрд╢рд╛ рд╕рдЪ рдмреЛрд▓рдирд╛ рдЪрд╛рд╣рд┐рдП рдФрд░ рдЕрдкрдиреЗ рд╕рдкрдиреЛрдВ рдХреЛ рдкреВрд░рд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХрдбрд╝реА рдореЗрд╣рдирдд рдХрд░рдиреА рдЪрд╛рд╣рд┐рдПред

рдЗрд╕ рдХрд╣рд╛рдиреА рдХрд╛ рдореБрдЦреНрдп рд╕рдВрджреЗрд╢ рдпрд╣ рд╣реИ рдХрд┐ рдЕрдЪреНрдЫрд╛рдИ рд╣рдореЗрд╢рд╛ рдмреБрд░рд╛рдИ рдкрд░ рдЬреАрдд рд╣реЛрддреА рд╣реИ, рдФрд░ рд╣рдореЗрдВ рдХрднреА рд╣рд╛рд░ рдирд╣реАрдВ рдорд╛рдирдирд╛ рдЪрд╛рд╣рд┐рдПред`;
      
      onStoryGenerated(sampleStory, query);
      setQuery('');
      setIsGenerating(false);
      
      toast({
        title: "рдХрд╣рд╛рдиреА рддреИрдпрд╛рд░ рд╣реИ! ЁЯУЪ",
        description: "рдХрд╣рд╛рдиреА рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдмрдирд╛рдИ рдЧрдИ рд╣реИ",
      });
    }, 2000);
  };

  return (
    <Card className="p-6 bg-gradient-to-r from-purple-50 to-pink-50 border-2 border-purple-200">
      <div className="flex items-center mb-4">
        <div className="w-10 h-10 bg-gradient-to-r from-purple-400 to-purple-500 rounded-full flex items-center justify-center mr-3">
          <FileText className="w-5 h-5 text-white" />
        </div>
        <div>
          <h3 className="text-lg font-semibold text-gray-800">рд╢рд┐рдХреНрд╖рдХ рдкреИрдирд▓</h3>
          <p className="text-sm text-gray-600">рдХрд╣рд╛рдиреА рдЬреЗрдирд░реЗрдЯ рдХрд░реЗрдВ</p>
        </div>
      </div>
      
      <div className="space-y-4">
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            рдХрд╣рд╛рдиреА рдХрд╛ рд╡рд┐рд╖рдп рд▓рд┐рдЦреЗрдВ:
          </label>
          <Textarea
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            placeholder="рдЙрджрд╛рд╣рд░рдг: 'рдПрдХ рдмрд╣рд╛рджреБрд░ рд░рд╛рдЬрдХреБрдорд╛рд░реА рдХреА рдХрд╣рд╛рдиреА рдмрдирд╛рдУ' рдпрд╛ 'рджреЛрд╕реНрддреА рдкрд░ рдХрд╣рд╛рдиреА'"
            className="min-h-[80px] border-purple-200 focus:border-purple-400"
            disabled={isGenerating}
          />
        </div>
        
        <Button
          onClick={handleGenerateStory}
          disabled={isGenerating || !query.trim()}
          className="w-full bg-gradient-to-r from-purple-400 to-purple-500 hover:from-purple-500 hover:to-purple-600 text-white"
          size="lg"
        >
          {isGenerating ? (
            <>
              <Loader2 className="w-4 h-4 mr-2 animate-spin" />
              рдХрд╣рд╛рдиреА рдмрдирд╛рдИ рдЬрд╛ рд░рд╣реА рд╣реИ...
            </>
          ) : (
            <>
              <Send className="w-4 h-4 mr-2" />
              рдХрд╣рд╛рдиреА рдмрдирд╛рдПрдВ
            </>
          )}
        </Button>
      </div>
    </Card>
  );
};

export default TeacherQuery;
