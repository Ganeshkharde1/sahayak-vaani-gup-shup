
import { useState, useRef } from 'react';
import { Play, Pause, Volume2, Heart } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { useToast } from '@/hooks/use-toast';

interface AudioBook {
  id: string;
  title: string;
  description: string;
  duration: string;
  category: string;
}

const MentalHealthAudio = () => {
  const [currentlyPlaying, setCurrentlyPlaying] = useState<string | null>(null);
  const [isPlaying, setIsPlaying] = useState(false);
  const audioRef = useRef<HTMLAudioElement>(null);
  const { toast } = useToast();

  const audioBooks: AudioBook[] = [
    {
      id: '1',
      title: '‡§§‡§®‡§æ‡§µ ‡§Æ‡•Å‡§ï‡•ç‡§§ ‡§ú‡•Ä‡§µ‡§®',
      description: '‡§§‡§®‡§æ‡§µ ‡§ï‡•ã ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∂‡§æ‡§Ç‡§§‡§ø ‡§™‡§æ‡§®‡•á ‡§ï‡•á ‡§§‡§∞‡•Ä‡§ï‡•á',
      duration: '15 ‡§Æ‡§ø‡§®‡§ü',
      category: '‡§§‡§®‡§æ‡§µ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®'
    },
    {
      id: '2',
      title: '‡§∏‡§ï‡§æ‡§∞‡§æ‡§§‡•ç‡§Æ‡§ï ‡§∏‡•ã‡§ö ‡§ï‡§æ ‡§ú‡§æ‡§¶‡•Ç',
      description: '‡§Ö‡§™‡§®‡•Ä ‡§∏‡•ã‡§ö ‡§ï‡•ã ‡§∏‡§ï‡§æ‡§∞‡§æ‡§§‡•ç‡§Æ‡§ï ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•Ä ‡§§‡§ï‡§®‡•Ä‡§ï‡•á‡§Ç',
      duration: '12 ‡§Æ‡§ø‡§®‡§ü',
      category: '‡§™‡•ç‡§∞‡•á‡§∞‡§£‡§æ'
    },
    {
      id: '3',
      title: '‡§Æ‡•á‡§°‡§ø‡§ü‡•á‡§∂‡§® ‡§î‡§∞ ‡§Æ‡§æ‡§á‡§Ç‡§°‡§´‡•Å‡§≤‡§®‡•á‡§∏',
      description: '‡§ß‡•ç‡§Ø‡§æ‡§® ‡§î‡§∞ ‡§∏‡§ö‡•á‡§§‡§§‡§æ ‡§ï‡•á ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏',
      duration: '20 ‡§Æ‡§ø‡§®‡§ü',
      category: '‡§ß‡•ç‡§Ø‡§æ‡§®'
    },
    {
      id: '4',
      title: '‡§Ü‡§§‡•ç‡§Æ‡§µ‡§ø‡§∂‡•ç‡§µ‡§æ‡§∏ ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§â‡§™‡§æ‡§Ø',
      description: '‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§™‡§∞ ‡§≠‡§∞‡•ã‡§∏‡§æ ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•Ä ‡§ó‡§æ‡§á‡§°',
      duration: '18 ‡§Æ‡§ø‡§®‡§ü',
      category: '‡§Ü‡§§‡•ç‡§Æ‡§µ‡§ø‡§ï‡§æ‡§∏'
    }
  ];

  const playAudio = (audioBook: AudioBook) => {
    if (currentlyPlaying === audioBook.id && isPlaying) {
      setIsPlaying(false);
      setCurrentlyPlaying(null);
      if (audioRef.current) {
        audioRef.current.pause();
      }
    } else {
      setCurrentlyPlaying(audioBook.id);
      setIsPlaying(true);
      
      // Simulate audio playback
      toast({
        title: `üéß ${audioBook.title}`,
        description: "‡§ë‡§°‡§ø‡§Ø‡•ã ‡§¨‡•Å‡§ï ‡§ö‡§≤ ‡§∞‡§π‡•Ä ‡§π‡•à...",
      });

      // Auto-stop after some time (simulation)
      setTimeout(() => {
        setIsPlaying(false);
        setCurrentlyPlaying(null);
        toast({
          title: "‡§ë‡§°‡§ø‡§Ø‡•ã ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§π‡•Å‡§à",
          description: "‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶! ‡§Ü‡§∂‡§æ ‡§π‡•à ‡§Ø‡§π ‡§Ü‡§™‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó‡•Ä ‡§•‡•Ä‡•§",
        });
      }, 10000);
    }
  };

  return (
    <div className="space-y-6">
      <Card className="border-pink-200 bg-gradient-to-r from-pink-50 to-purple-50">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2 text-pink-800">
            <Heart className="w-5 h-5" />
            <span>‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§î‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£</span>
          </CardTitle>
          <p className="text-sm text-gray-600">
            ‡§ë‡§°‡§ø‡§Ø‡•ã ‡§¨‡•Å‡§ï‡•ç‡§∏ ‡§∏‡•Å‡§®‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§™‡§®‡•á ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡§æ ‡§ñ‡•ç‡§Ø‡§æ‡§≤ ‡§∞‡§ñ‡•á‡§Ç
          </p>
        </CardHeader>
      </Card>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {audioBooks.map((audioBook) => (
          <Card key={audioBook.id} className="border-purple-200 hover:shadow-lg transition-shadow">
            <CardContent className="pt-6">
              <div className="space-y-4">
                <div>
                  <div className="flex items-start justify-between mb-2">
                    <h3 className="font-semibold text-purple-800">{audioBook.title}</h3>
                    <span className="text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded">
                      {audioBook.category}
                    </span>
                  </div>
                  <p className="text-sm text-gray-600 mb-2">{audioBook.description}</p>
                  <p className="text-xs text-gray-500">‚è±Ô∏è {audioBook.duration}</p>
                </div>

                <div className="flex items-center justify-between">
                  <Button
                    onClick={() => playAudio(audioBook)}
                    variant={currentlyPlaying === audioBook.id && isPlaying ? "destructive" : "default"}
                    className={`${
                      currentlyPlaying === audioBook.id && isPlaying
                        ? "bg-red-500 hover:bg-red-600"
                        : "bg-purple-500 hover:bg-purple-600"
                    }`}
                  >
                    {currentlyPlaying === audioBook.id && isPlaying ? (
                      <>
                        <Pause className="w-4 h-4 mr-2" />
                        ‡§∞‡•ã‡§ï‡•á‡§Ç
                      </>
                    ) : (
                      <>
                        <Play className="w-4 h-4 mr-2" />
                        ‡§∏‡•Å‡§®‡•á‡§Ç
                      </>
                    )}
                  </Button>

                  {currentlyPlaying === audioBook.id && isPlaying && (
                    <div className="flex items-center space-x-2 text-purple-600">
                      <Volume2 className="w-4 h-4 animate-pulse" />
                      <div className="flex space-x-1">
                        <div className="w-1 h-4 bg-purple-400 animate-pulse"></div>
                        <div className="w-1 h-6 bg-purple-500 animate-pulse" style={{ animationDelay: '0.1s' }}></div>
                        <div className="w-1 h-3 bg-purple-400 animate-pulse" style={{ animationDelay: '0.2s' }}></div>
                        <div className="w-1 h-5 bg-purple-500 animate-pulse" style={{ animationDelay: '0.3s' }}></div>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <Card className="border-blue-200 bg-blue-50">
        <CardContent className="pt-6">
          <div className="text-center">
            <h3 className="font-semibold text-blue-800 mb-2">üßò‚Äç‚ôÄÔ∏è ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ü‡§ø‡§™‡•ç‡§∏</h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-gray-600">
              <div className="bg-white p-3 rounded">
                <p className="font-medium text-blue-700">‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ</p>
                <p>‡§∞‡•ã‡§ú‡§º‡§æ‡§®‡§æ 30 ‡§Æ‡§ø‡§®‡§ü ‡§ï‡§æ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§Æ‡•Ç‡§° ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à</p>
              </div>
              <div className="bg-white p-3 rounded">
                <p className="font-medium text-blue-700">‡§™‡§∞‡•ç‡§Ø‡§æ‡§™‡•ç‡§§ ‡§®‡•Ä‡§Ç‡§¶</p>
                <p>7-8 ‡§ò‡§Ç‡§ü‡•á ‡§ï‡•Ä ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§®‡•Ä‡§Ç‡§¶ ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à</p>
              </div>
              <div className="bg-white p-3 rounded">
                <p className="font-medium text-blue-700">‡§∏‡§æ‡§Æ‡§æ‡§ú‡§ø‡§ï ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï</p>
                <p>‡§¶‡•ã‡§∏‡•ç‡§§‡•ã‡§Ç ‡§î‡§∞ ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§∞‡§π‡•á‡§Ç</p>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      <audio ref={audioRef} style={{ display: 'none' }} />
    </div>
  );
};

export default MentalHealthAudio;
