
import { useState } from 'react';
import { GamepadIcon, Download, Puzzle } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { useToast } from '@/hooks/use-toast';

const GameGenerator = () => {
  const [topic, setTopic] = useState('');
  const [gameType, setGameType] = useState('');
  const [loading, setLoading] = useState(false);
  const { toast } = useToast();

  const generateGame = async () => {
    if (!topic.trim() || !gameType) {
      toast({
        title: "рдХреГрдкрдпрд╛ рд╡рд┐рд╖рдп рдФрд░ рдЧреЗрдо рдХрд╛ рдкреНрд░рдХрд╛рд░ рдЪреБрдиреЗрдВ",
        variant: "destructive",
      });
      return;
    }

    setLoading(true);
    
    setTimeout(() => {
      // Simulate PDF generation
      const gameContent = {
        quiz: {
          title: `${topic} - рдкреНрд░рд╢реНрдиреЛрддреНрддрд░реА`,
          questions: [
            "рдкреНрд░рд╢реНрди 1: рдЗрд╕ рд╡рд┐рд╖рдп рдХреА рдореБрдЦреНрдп рдкрд░рд┐рднрд╛рд╖рд╛ рдХреНрдпрд╛ рд╣реИ?",
            "рдкреНрд░рд╢реНрди 2: рдЗрд╕рдХреЗ рдореБрдЦреНрдп рдШрдЯрдХ рдХреМрди рд╕реЗ рд╣реИрдВ?",
            "рдкреНрд░рд╢реНрди 3: рдЗрд╕рдХрд╛ рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдЙрдкрдпреЛрдЧ рдХреНрдпрд╛ рд╣реИ?"
          ]
        },
        puzzle: {
          title: `${topic} - рдкрд╣реЗрд▓реА`,
          activities: [
            "рд╢рдмреНрдж рдЦреЛрдЬ рдкрд╣реЗрд▓реА",
            "рдХреНрд░реЙрд╕рд╡рд░реНрдб рдкрдЬрд╝рд▓",
            "рдорд┐рд▓рд╛рди рдЧрддрд┐рд╡рд┐рдзрд┐"
          ]
        }
      };

      // Create a simple text content for PDF
      const content = gameType === 'quiz' ? gameContent.quiz : gameContent.puzzle;
      const pdfContent = `${content.title}\n\n${gameType === 'quiz' ? content.questions.join('\n') : content.activities.join('\n')}`;
      
      // Create and download PDF (simplified version)
      const blob = new Blob([pdfContent], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${topic}-${gameType}.txt`;
      a.click();
      
      setLoading(false);
      toast({
        title: "рдЧреЗрдо рддреИрдпрд╛рд░ рд╣реЛ рдЧрдпрд╛!",
        description: "рдлрд╛рдЗрд▓ рдбрд╛рдЙрдирд▓реЛрдб рд╣реЛ рд░рд╣реА рд╣реИ",
      });
    }, 3000);
  };

  return (
    <div className="space-y-6">
      <Card className="border-green-200">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2 text-green-800">
            <GamepadIcon className="w-5 h-5" />
            <span>рд╢реИрдХреНрд╖рд┐рдХ рдЧреЗрдо рдЬреЗрдирд░реЗрдЯрд░</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">рд╡рд┐рд╖рдп/рдЯреЙрдкрд┐рдХ:</label>
              <Input
                placeholder="рдЬреИрд╕реЗ: рдЧрдгрд┐рдд, рд╡рд┐рдЬреНрдЮрд╛рди, рдЗрддрд┐рд╣рд╛рд╕"
                value={topic}
                onChange={(e) => setTopic(e.target.value)}
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium mb-2">рдЧреЗрдо рдХрд╛ рдкреНрд░рдХрд╛рд░:</label>
              <Select value={gameType} onValueChange={setGameType}>
                <SelectTrigger>
                  <SelectValue placeholder="рдЧреЗрдо рдЪреБрдиреЗрдВ" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="quiz">рдкреНрд░рд╢реНрдиреЛрддреНрддрд░реА (Quiz)</SelectItem>
                  <SelectItem value="puzzle">рдкрд╣реЗрд▓реА (Puzzle)</SelectItem>
                </SelectContent>
              </Select>
            </div>
            
            <Button 
              onClick={generateGame}
              disabled={loading}
              className="bg-green-500 hover:bg-green-600 w-full"
            >
              <Puzzle className="w-4 h-4 mr-2" />
              {loading ? "рдЧреЗрдо рдмрдирд╛ рд░рд╣реЗ рд╣реИрдВ..." : "рдЧреЗрдо рдмрдирд╛рдПрдВ рдФрд░ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ"}
            </Button>
          </div>
        </CardContent>
      </Card>

      <Card className="border-blue-200 bg-blue-50">
        <CardContent className="pt-6">
          <div className="text-center">
            <h3 className="font-semibold text-blue-800 mb-2">ЁЯОо рдХреИрд╕реЗ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ?</h3>
            <div className="text-sm text-gray-600 space-y-1">
              <p>1. рдЕрдкрдирд╛ рд╡рд┐рд╖рдп рдФрд░ рдЧреЗрдо рдХрд╛ рдкреНрд░рдХрд╛рд░ рдЪреБрдиреЗрдВ</p>
              <p>2. AI рдЖрдкрдХреЗ рд▓рд┐рдП рдХрд╕реНрдЯрдо рдЧреЗрдо рдмрдирд╛рдПрдЧрд╛</p>
              <p>3. PDF рдлрд╛рдЗрд▓ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ рдФрд░ рдХреНрд▓рд╛рд╕ рдореЗрдВ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ</p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default GameGenerator;
